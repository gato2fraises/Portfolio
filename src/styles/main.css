/**
 * Styles principaux du Portfolio Dylan Carion
 * Architecture CSS moderne et modulaire
 */

/* === IMPORTS ORGANISÉS === */

/* Styles de base (variables, reset, typographie) */
@import './base/index.css';

/* Systèmes de layout (grilles, flexbox) */
@import './layouts/index.css';

/* Thèmes (clair, sombre) */
@import './themes/index.css';

/* Styles de composants */
@import './components/index.css';

/* === STYLES GLOBAUX === */
*,
*::before,
*::after {
  box-sizing: border-box;
}

html {
  font-size: 16px;
  scroll-behavior: smooth;
}

body {
  font-family: var(--font-family-base);
  font-size: var(--font-size-base);
  line-height: var(--line-height-base);
  color: var(--color-text);
  background-color: var(--color-background);
  transition: color 0.3s ease, background-color 0.3s ease;
  overflow-x: hidden;
}

/* === LAYOUT PRINCIPAL === */
.app {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

.main {
  flex: 1;
}

/* === SECTIONS === */
.section {
  padding: var(--spacing-section) 0;
  min-height: 100vh;
  display: flex;
  align-items: center;
}

.section:first-child {
  padding-top: calc(var(--spacing-section) + var(--header-height));
}

/* === COMPOSANTS COMMUNS === */

/* Boutons */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: var(--spacing-md) var(--spacing-lg);
  border: 2px solid transparent;
  border-radius: var(--border-radius-md);
  font-size: var(--font-size-md);
  font-weight: var(--font-weight-medium);
  text-decoration: none;
  cursor: pointer;
  transition: all 0.3s ease;
  white-space: nowrap;
}

.btn-primary {
  background: var(--color-primary);
  color: white;
  border-color: var(--color-primary);
}

.btn-primary:hover {
  background: var(--color-primary-dark);
  border-color: var(--color-primary-dark);
  transform: translateY(-2px);
}

.btn-outline {
  background: transparent;
  color: var(--color-primary);
  border-color: var(--color-primary);
}

.btn-outline:hover {
  background: var(--color-primary);
  color: white;
  transform: translateY(-2px);
}

/* Containers */
.container {
  max-width: var(--container-max-width);
  margin: 0 auto;
  padding: 0 var(--spacing-md);
}

@media (min-width: 768px) {
  .container {
    padding: 0 var(--spacing-lg);
  }
}

/* === ANIMATIONS === */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes pulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

.animate-in {
  animation: fadeInUp 0.6s ease forwards;
}

.animate-in-left {
  animation: fadeInLeft 0.6s ease forwards;
}

.animate-in-right {
  animation: fadeInRight 0.6s ease forwards;
}

/* === UTILITAIRES === */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.text-center {
  text-align: center;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

/* === RESPONSIVE === */
@media (max-width: 767px) {
  .section {
    padding: var(--spacing-lg) 0;
    min-height: auto;
  }
  
  .btn {
    padding: var(--spacing-sm) var(--spacing-md);
    font-size: var(--font-size-sm);
  }
}

/* === REDUCED MOTION === */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

.reduce-motion *,
.reduce-motion *::before,
.reduce-motion *::after {
  animation-duration: 0.01ms !important;
  animation-iteration-count: 1 !important;
  transition-duration: 0.01ms !important;
}

/* === FOCUS MANAGEMENT === */
.focus-visible {
  outline: 2px solid var(--color-primary);
  outline-offset: 2px;
}

/* === PRINT STYLES === */
@media print {
  .header,
  .footer {
    display: none;
  }
  
  .section {
    min-height: auto;
    page-break-inside: avoid;
  }
  
  a {
    text-decoration: underline;
  }
  
  a[href^="http"]:after {
    content: " (" attr(href) ")";
  }
}